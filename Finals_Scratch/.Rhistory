summary(model_am)
model_all <- lm(mpg ~ ., data=mtcars)
summary(model_all)
model_step <- step(model_all)
summary(model_step)
model_other <- lm(mpg ~ wt + am + hp, data = mtcars)
summary(model_other)
model_final <- lm(mpg ~ wt + qsec + am + am:wt, data = mtcars)
summary(model_final)
sum((abs(dfbetas(model_final)))>1)
### * The Bullet Journal Method - https://bulletjournal.com/
### * The 80/20 Principle: The Secret to Achieving More with Less by Richard Koch
### * Time Management Guide - https://diggitymarketing.com/time-management-guide/
### *
topprojs <- ggplot(topprojectsbarchart, aes(x = Priority, y = Hours)) + geom_col(colour= "pink", fill="blue", mapping=NULL,topprojectsbarchart,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
topprojs <- topprojs + theme(axis.text = element_text(size = 6))
topprojs
treemapcoords <- treemapify(topprojectsbarchart, area="Hours")
head(treemapcoords)
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE) + labs(title="H's Life Priorities in Computer Hours 2018")
topprojtreemap
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(ggplot2)
library(dplyr)
library(reshape2)
library(treemapify)
library(reshape2)
library(ggplotify)
# load the datasets
mood<-read.csv('BulletJournalData.csv')
macbook<-read.csv('FinalExamData_Barrameda_raw.csv')
topprojects <- tapply(macbook$Duration/3600,macbook$Project,sum)
topprojectsbarchart <- data.frame(Priority=names(topprojects), Hours=topprojects)
topprojectsbarchart <- mutate(topprojectsbarchart, LifeCategory = "Life")
topprojectsbarchart[1,3]<-"Trading"
topprojectsbarchart[2,3]<-"DevOps"
topprojectsbarchart[3,3]<-"Data"
topprojectsbarchart[4,3]<-"Updates/Installs"
topprojectsbarchart[5,3]<-"Data"
topprojectsbarchart[6,3]<-"Personal"
topprojectsbarchart[7,3]<-"Acads"
topprojectsbarchart[8,3]<-"Data"
topprojs <- ggplot(topprojectsbarchart, aes(x = Priority, y = Hours)) + geom_col(colour= "pink", fill="blue", mapping=NULL,topprojectsbarchart,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
topprojs <- topprojs + theme(axis.text = element_text(size = 6))
topprojs
treemapcoords <- treemapify(topprojectsbarchart, area="Hours")
head(treemapcoords)
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE) + labs(title="H's Life Priorities in Computer Hours 2018")
topprojtreemap
model_am <- lm(mpg ~ am, data=mtcars)
summary(model_am)
model_all <- lm(mpg ~ ., data=mtcars)
summary(model_all)
model_step <- step(model_all)
summary(model_step)
model_other <- lm(mpg ~ wt + am + hp, data = mtcars)
summary(model_other)
model_final <- lm(mpg ~ wt + qsec + am + am:wt, data = mtcars)
summary(model_final)
sum((abs(dfbetas(model_final)))>1)
### * The Bullet Journal Method - https://bulletjournal.com/
### * The 80/20 Principle: The Secret to Achieving More with Less by Richard Koch
### * Time Management Guide - https://diggitymarketing.com/time-management-guide/
### *
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(ggplot2)
library(dplyr)
library(reshape2)
library(treemapify)
library(reshape2)
library(ggplotify)
# load the datasets
mood<-read.csv('BulletJournalData.csv')
macbook<-read.csv('FinalExamData_Barrameda_raw.csv')
topprojects <- tapply(macbook$Duration/3600,macbook$Project,sum)
topprojectsbarchart <- data.frame(Priority=names(topprojects), Hours=topprojects)
topprojectsbarchart <- mutate(topprojectsbarchart, LifeCategory = "Life")
topprojectsbarchart[1,3]<-"Trading"
topprojectsbarchart[2,3]<-"DevOps"
topprojectsbarchart[3,3]<-"Data"
topprojectsbarchart[4,3]<-"Updates/Installs"
topprojectsbarchart[5,3]<-"Data"
topprojectsbarchart[6,3]<-"Personal"
topprojectsbarchart[7,3]<-"Acads"
topprojectsbarchart[8,3]<-"Data"
topprojs <- ggplot(topprojectsbarchart, aes(x = Priority, y = Hours)) + geom_col(colour= "pink", fill="blue", mapping=NULL,topprojectsbarchart,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
topprojs <- topprojs + theme(axis.text = element_text(size = 6))
topprojs
treemapcoords <- treemapify(topprojectsbarchart, area="Hours")
head(treemapcoords)
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE) + labs(title="H's Life Priorities in Computer Hours 2018")
topprojtreemap
model_am <- lm(mpg ~ am, data=mtcars)
summary(model_am)
model_all <- lm(mpg ~ ., data=mtcars)
summary(model_all)
model_step <- step(model_all)
summary(model_step)
model_other <- lm(mpg ~ wt + am + hp, data = mtcars)
summary(model_other)
model_final <- lm(mpg ~ wt + qsec + am + am:wt, data = mtcars)
summary(model_final)
sum((abs(dfbetas(model_final)))>1)
### * The Bullet Journal Method - https://bulletjournal.com/
### * The 80/20 Principle: The Secret to Achieving More with Less by Richard Koch
### * Time Management Guide - https://diggitymarketing.com/time-management-guide/
### *
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(ggplot2)
library(dplyr)
library(reshape2)
library(treemapify)
library(reshape2)
library(ggplotify)
# load the datasets
mood<-read.csv('BulletJournalData.csv')
macbook<-read.csv('FinalExamData_Barrameda_raw.csv')
topprojects <- tapply(macbook$Duration/3600,macbook$Project,sum)
topprojectsbarchart <- data.frame(Priority=names(topprojects), Hours=topprojects)
topprojectsbarchart <- mutate(topprojectsbarchart, LifeCategory = "Life")
topprojectsbarchart[1,3]<-"Trading"
topprojectsbarchart[2,3]<-"DevOps"
topprojectsbarchart[3,3]<-"Data"
topprojectsbarchart[4,3]<-"Updates/Installs"
topprojectsbarchart[5,3]<-"Data"
topprojectsbarchart[6,3]<-"Personal"
topprojectsbarchart[7,3]<-"Acads"
topprojectsbarchart[8,3]<-"Data"
#topprojs <- ggplot(topprojectsbarchart, aes(x = Priority, y = Hours)) + geom_col(colour= "pink", fill="blue", mapping=NULL,topprojectsbarchart,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
#topprojs <- topprojs + theme(axis.text = element_text(size = 6))
#topprojs
treemapcoords <- treemapify(topprojectsbarchart, area="Hours")
head(treemapcoords)
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE) + labs(title="Life Priorities in H's 434 Computer Hours")
topprojtreemap
model_am <- lm(mpg ~ am, data=mtcars)
summary(model_am)
model_all <- lm(mpg ~ ., data=mtcars)
summary(model_all)
model_step <- step(model_all)
summary(model_step)
model_other <- lm(mpg ~ wt + am + hp, data = mtcars)
summary(model_other)
model_final <- lm(mpg ~ wt + qsec + am + am:wt, data = mtcars)
summary(model_final)
sum((abs(dfbetas(model_final)))>1)
### * The Bullet Journal Method - https://bulletjournal.com/
### * The 80/20 Principle: The Secret to Achieving More with Less by Richard Koch
### * Time Management Guide - https://diggitymarketing.com/time-management-guide/
### *
library(devtools)
library(ggplot2)
library(dplyr)
library(reshape2)
library(treemapify)
library(reshape2)
library(ggplotify)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(ggplot2)
library(dplyr)
library(reshape2)
library(treemapify)
library(reshape2)
library(ggplotify)
# load the datasets
mood<-read.csv('BulletJournalData.csv')
macbook<-read.csv('FinalExamData_Barrameda_raw.csv')
topprojects <- tapply(macbook$Duration/3600,macbook$Project,sum)
topprojectsbarchart <- data.frame(Priority=names(topprojects), Hours=topprojects)
topprojectsbarchart <- mutate(topprojectsbarchart, LifeCategory = "Life")
topprojectsbarchart[1,3]<-"Trading"
topprojectsbarchart[2,3]<-"DevOps"
topprojectsbarchart[3,3]<-"Data"
topprojectsbarchart[4,3]<-"Updates/Installs"
topprojectsbarchart[5,3]<-"Data"
topprojectsbarchart[6,3]<-"Personal"
topprojectsbarchart[7,3]<-"Acads"
topprojectsbarchart[8,3]<-"Data"
#topprojs <- ggplot(topprojectsbarchart, aes(x = Priority, y = Hours)) + geom_col(colour= "pink", fill="blue", mapping=NULL,topprojectsbarchart,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
#topprojs <- topprojs + theme(axis.text = element_text(size = 6))
#topprojs
treemapcoords <- treemapify(topprojectsbarchart, area="Hours")
head(treemapcoords)
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE) + labs(title="Life Priorities in H's 434 Computer Hours")
topprojtreemap
model_am <- lm(mpg ~ am, data=mtcars)
summary(model_am)
model_all <- lm(mpg ~ ., data=mtcars)
summary(model_all)
model_step <- step(model_all)
summary(model_step)
model_other <- lm(mpg ~ wt + am + hp, data = mtcars)
summary(model_other)
model_final <- lm(mpg ~ wt + qsec + am + am:wt, data = mtcars)
summary(model_final)
sum((abs(dfbetas(model_final)))>1)
### * The Bullet Journal Method - https://bulletjournal.com/
### * The 80/20 Principle: The Secret to Achieving More with Less by Richard Koch
### * Time Management Guide - https://diggitymarketing.com/time-management-guide/
### *
topprojectsbarchart
install.packages(tidyr)
install.packages("tidyr")
library(tidyr)
names(macbook)
macbook$Start
class(macbook$Start)
head(macbook,3)
#Most Active Weekdays
weekdayds <- mutate(macbook, KeyStrokes=0)
head(weekdayds)
#Most Active Weekdays
weekdayds <- mutate(macbook, KeyStrokes=1)
#Most Active Weekdays
# 1 Row is One Keystroke detected by the Timing App on Macbook
weekdayds <- mutate(macbook, KeyStrokes=1)
class(macbook$Date)
head(macbook)
# 1 Row is One Keystroke detected by the Timing App on Macbook
weekdayds <- mutate(macbook, KeyStrokes=1,Day=weekdays(as.date(macbook$Date)))
# 1 Row is One Keystroke detected by the Timing App on Macbook
weekdayds <- mutate(macbook, KeyStrokes=1,Day=as.POSIXlt(Date)$wday)
head(weekdayds)
weekdayds2 <- count(weekdayds,Day)
head(weekdayds2)
head(weekdayds2)
weekdayds2
theweek <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
weekdayds2 <- cbind(theweek,weekdayds2)
weekdayds2
weekdayds2
weekdayds2
weekdayds <- mutate(macbook, KeyStrokes=1,Day=as.POSIXlt(Date)$wday)
weekdayds2 <- count(weekdayds,Day)
head(weekdayds2)
theweek <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
weekdayds2 <- cbind(theweek,weekdayds2)
weekdayds2
weekdayplot <- ggplot(weekdayds2, aes(x = theweek, y = n)) + geom_col(colour= "yellow", fill="blue", mapping=NULL,weekdayds2,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x = theweek, y = n)) + geom_col(colour= "yellow", fill="blue", mapping=NULL,weekdayds2,width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x = theweek, y = n)) + geom_col(colour= "yellow", fill="blue",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x=theweek, y=n)) + geom_col(colour= "yellow", fill="blue",width=NULL,show.legend=TRUE)
weekdayplot
weekdayds2
weekdayplot <- ggplot(weekdayds2, aes(x=n, y=theweek)) + geom_col(colour= "yellow", fill="blue",width=NULL,show.legend=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x=n, y=theweek)) +geom_col(fill="blue",show.legend=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x=n, y=theweek)) + geom_col(fill="blue",width=NULL,show.legend=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x = theweek, y = n)) + geom_bar(fill="pink", mapping=NULL,topprojectsbarchart,position="stack",width=NULL,na.rm=TRUE,show.legend=TRUE,inherit.aes=TRUE)
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x = theweek)) + geom_bar(binwidth=1)
weekdayplot <- ggplot(weekdayds2, aes(x = theweek)) + geom_histogram(binwidth=1)
weekdayplot
?geom_histogram
weekdayplot <- ggplot(weekdayds2, aes(x = theweek)) + geom_histogram(binwidth=1,stat="count")
weekdayplot
weekdayplot <- ggplot(weekdayds2, aes(x = theweek)) + geom_histogram(stat=n)
weekdayplot <- ggplot(weekdayds2, aes(x = theweek)) + geom_histogram(stat="value")
weekdayds <- mutate(macbook, KeyStrokes=1,Day=as.POSIXlt(Date)$wday)
weekdayds2 <- count(weekdayds,Day)
head(weekdayds2)
head(weekdayds2)
weekdayds <- mutate(macbook, KeyStrokes=1,Day=as.POSIXlt(Date)$wday)
head(weekdayds)
weekdayplot <- ggplot(weekdayds, aes(x = Day)) + geom_histogram(stat="count)
weekdayplot
weekdayplot
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat="count")
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat=count)
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram()
weekdayplot
head(weekdayds)
weekdayds$Day <- recode(weekdayds$Day,
"0"="Sunday",
"1"="Monday",
"2"="Tuesday",
"3"="Wednesday",
"4"="Thursday",
"5"="Friday",
"6"="Saturday")
head(weekdayds)
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram()
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat=count)
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat="count"")
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat="count)
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat="count")
weekdayplot
?order
weekdayds<-weekdayds[order(weekdayds$Day),]
head(weekdayds)
View(weekdayds)
View(weekdayds2)
View(weekdayds)
rm(weekdayds)
rm(weekdayds2)
#Most Active Weekdays
# 1 Row is One Keystroke detected by the Timing App on Macbook
weekdayds <- mutate(macbook, KeyStrokes=1,Day=as.POSIXlt(Date)$wday)
head(weekdayds)
weekdayds<-weekdayds[order(weekdayds$Day),]
head(weekdayds)
tail(weekdayds)
weekdayds$Day <- recode(weekdayds$Day,
"0"="Sunday",
"1"="Monday",
"2"="Tuesday",
"3"="Wednesday",
"4"="Thursday",
"5"="Friday",
"6"="Saturday")
head(weekdayds)
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_histogram(stat="count")
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day,fill="blue")) + geom_histogram(stat="count")
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day,fill="blue",legend=FALSE)) + geom_histogram(stat="count")
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day,legend=FALSE)) + geom_histogram(stat="count")
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day,legend=FALSE)) + geom_histogram(stat="identity")
weekdayplot
weekdayplot<-ggplot(weekdayds, aes(x=Day,legend=FALSE)) + geom_histogram(stat="count")
weekdayplot
weekdayplot+coord_flip()
weekdayplot<-ggplot(weekdayds, aes(x=Day,legend=FALSE)) + geom_bar()
weekdayplot+coord_flip()
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_bar(fill="pink")
weekdayplot+coord_flip()
weekdayplot<-ggplot(weekdayds, aes(x=Day)) + geom_bar(fill="blue")
weekdayplot+coord_flip()
weekdayplot+coord_flip()+labs(title="Sunday is My HyperDay",xlab="Key Strokes")
weekdayplot+coord_flip()+labs(title="My Key Strokes Say Sunday is My HyperDay")
weekdayplot+coord_flip()+labs(title="My Key Strokes Say Sunday is My Hyper Day")
colnames(macbook)
colnames(mood)
topprojtreemap
personaldeepdive=filter(macbook,Project="Personal Time")
personaldeepdive=filter(macbook,Project=="Personal Time")
head(personaldeepdive)
View(personaldeepdive)
head(personaldeepdive)
personaldeepdive<-filter(macbook,Project=="Personal Time")
head(personaldeepdive)
#Remove duplicates (no need for keystrokes here)
personaldeepdive<-distinct(personaldeepdive)
personaldeepdive
View(personaldeepdive)
personaldeepdive<-filter(macbook,Project=="Personal Time")
head(personaldeepdive)
path<-count(personaldeepdive,Path)
View(path)
app<-count(personaldeepdive,Applications)
app<-count(personaldeepdive,Application)
app
order(app,decreasing=TRUE)
sort(app,DECREASING=TRUE)
sort(app,DECREASING=TRUE)
View(app)
app<-app[app$n>=10]
app<-app$n>=10
app
app<-count(personaldeepdive,Application)
app<-count(personaldeepdive,Application)
app<-app[app$n>=10]
app<-app[which.app$n>=10]
app<-filter(app,n>=10]
app<-filter(app,n>=10)
app
sort(app,decreasing = TRUE)
class(app)
app
personaldeepdive<-filter(macbook,Project=="Personal Time")
head(personaldeepdive)
path<-count(personaldeepdive,Path)
app<-count(personaldeepdive,Application)
#app<-filter(app,n>=10)
app
install.packages("ggpubr")
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
library(ggpubr)
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications
app<-count(personaldeepdive,Application)
app<-filter(app,n>=5)
app
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications
app<-filter(app,n>=10)
app
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications
applications+coord_flip()
app<-filter(app,n>=15)
app
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications+coord_flip()
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications+coord_flip()
app<-filter(app,n>=100)
app
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "orange",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications+coord_flip()
topprojects
41/sum(topprojects$n)
class(topprojects)
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "blue",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications+coord_flip()
applications <- ggbarplot(app, x = "Application", y = "n",
fill = "pink",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "asc",          # Sort the value in dscending order
sort.by.groups = FALSE,     # Don't sort inside each group
x.text.angle = 90           # Rotate vertically x axis texts
)
applications+coord_flip()
?aggregate
?aggregate.data.frame
head(mood)
# load the datasets
mood<-read.csv('BulletJournalData.csv')
# load the datasets
head(mood)
ggplot(mood, aes(x=MoodScore, y=SelfCareScore)) + geom_point()
plot(scores)
plot(scores)
scores <- ggplot(mood, aes(x=MoodScore, y=SelfCareScore)) + geom_point()
plot(scores)
scores <- ggplot(mood, aes(x=MoodScore, y=SelfCareScore)) + geom_point() + geom_smooth(method="lm")
scores <- ggplot(mood, aes(x=MoodScore, y=SelfCareScore)) + geom_point() + geom_smooth(method="lm")
plot(scores)
save.image("~/RProgGlobal/cfora/maba_computingforanalytics/Finals_Scratch/FinalsEnv.RData")
?fig_width
??fig_width
weekdayplot+coord_flip()+labs(title="My Key Strokes Say Sunday is My Hyper Day")
applications+coord_flip()
applications+coord_flip()+labs(title="A Chatty, Browsing Pirate")
scores <- ggplot(mood, aes(x=MoodScore, y=SelfCareScore)) + geom_point() + geom_smooth(method="lm",col="firebrick")
plot(scores)
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE)
treemapcoords <- treemapify(topprojectsbarchart, area="Hours")
topprojtreemap<- ggplot(topprojectsbarchart, ggplot2::aes(area=Hours,fill=LifeCategory,label = Priority)) + geom_treemap() + geom_treemap_text(grow=TRUE)
#+ labs(title="Life Priorities in H's 434 Computer Hours")
topprojtreemap
save.image("~/RProgGlobal/cfora/maba_computingforanalytics/Finals_Scratch/FinalsEnv.RData")
